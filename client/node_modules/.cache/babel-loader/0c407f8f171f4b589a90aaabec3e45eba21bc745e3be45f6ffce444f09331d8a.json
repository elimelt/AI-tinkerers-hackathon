{"ast":null,"code":"var _jsxFileName = \"/Users/emm12/repos/healthinsights_hackathon/client/src/ImageUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ImageUpload.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Handle file selection\n  const handleFileChange = e => {\n    var _e$target$files;\n    const file = ((_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0]) || null;\n    if (file) {\n      setSelectedFile(file);\n      setPreview(URL.createObjectURL(file)); // Preview the image\n    } else {\n      setSelectedFile(null);\n      setPreview(null);\n    }\n  };\n\n  // Upload the file to the API\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setErrorMessage(\"No file selected.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile); // Attach the file to form data\n\n    try {\n      setUploading(true);\n      setErrorMessage(null);\n\n      // Replace with the actual API call\n      const response = await fetch(\"https://api.claude.ai/upload\", {\n        method: \"POST\",\n        body: formData,\n        headers: {\n          // Add authentication headers if needed\n          // Authorization: `Bearer YOUR_API_KEY`,\n        }\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"File uploaded successfully:\", result);\n      } else {\n        setErrorMessage(\"File upload failed.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setErrorMessage(\"An error occurred during file upload.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload an Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Selected file preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      disabled: uploading,\n      className: `upload-button ${uploading ? \"uploading\" : \"\"}`,\n      children: uploading ? \"Uploading...\" : \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"k9YVkRcnPEaeS9HiYBARra4LISA=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImageUpload","_s","selectedFile","setSelectedFile","preview","setPreview","uploading","setUploading","errorMessage","setErrorMessage","handleFileChange","e","_e$target$files","file","target","files","URL","createObjectURL","handleFileUpload","formData","FormData","append","response","fetch","method","body","headers","ok","result","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/emm12/repos/healthinsights_hackathon/client/src/ImageUpload.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport './ImageUpload.css'; // Import CSS for styling\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [preview, setPreview] = useState<string | null>(null);\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n  // Handle file selection\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0] || null;\n    if (file) {\n      setSelectedFile(file);\n      setPreview(URL.createObjectURL(file)); // Preview the image\n    } else {\n      setSelectedFile(null);\n      setPreview(null);\n    }\n  };\n\n  // Upload the file to the API\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setErrorMessage(\"No file selected.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile); // Attach the file to form data\n\n    try {\n      setUploading(true);\n      setErrorMessage(null);\n\n      // Replace with the actual API call\n      const response = await fetch(\"https://api.claude.ai/upload\", {\n        method: \"POST\",\n        body: formData,\n        headers: {\n          // Add authentication headers if needed\n          // Authorization: `Bearer YOUR_API_KEY`,\n        },\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(\"File uploaded successfully:\", result);\n      } else {\n        setErrorMessage(\"File upload failed.\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      setErrorMessage(\"An error occurred during file upload.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"image-upload-container\">\n      <h2>Upload an Image</h2>\n\n      {/* File Input */}\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n\n      {/* Image Preview */}\n      {preview && (\n        <div className=\"image-preview\">\n          <img src={preview} alt=\"Selected file preview\" />\n        </div>\n      )}\n\n      {/* Upload Button */}\n      <button\n        onClick={handleFileUpload}\n        disabled={uploading}\n        className={`upload-button ${uploading ? \"uploading\" : \"\"}`}\n      >\n        {uploading ? \"Uploading...\" : \"Upload Image\"}\n      </button>\n\n      {/* Error Message */}\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}