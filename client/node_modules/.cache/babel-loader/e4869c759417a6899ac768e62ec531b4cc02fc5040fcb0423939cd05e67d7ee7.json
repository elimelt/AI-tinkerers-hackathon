{"ast":null,"code":"var _jsxFileName = \"/Users/emm12/repos/healthinsights_hackathon/client/src/ImageUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [ingredients, setIngredients] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    var _e$target;\n    setSelectedFile(((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0]) || null); // Set the selected file\n    setIngredients(null); // Reset ingredients when a new file is selected\n    setError(null); // Reset error when a new file is selected\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n    setLoading(true);\n    setError(null);\n\n    // Prepare the form data\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      // Send the image to the backend API\n      const response = await axios.post(\"http://localhost:8000/upload-image/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Extract the ingredients from the response\n      const {\n        ingredients\n      } = response.data;\n      setIngredients(ingredients);\n    } catch (error) {\n      setError(\"Failed to fetch ingredients. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload an Image to Get Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"image-upload-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Uploading...\" : \"Upload and Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Processing image...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), ingredients && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Ingredients Found:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredients.split(\"\\n\").map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"uMQvU1PjisXhTw32YgShA8+i9q4=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUpload","_s","selectedFile","setSelectedFile","ingredients","setIngredients","loading","setLoading","error","setError","handleFileChange","e","_e$target","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","response","post","headers","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","disabled","split","map","ingredient","index","_c","$RefreshReg$"],"sources":["/Users/emm12/repos/healthinsights_hackathon/client/src/ImageUpload.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './ImageUpload.css';\n\nconst ImageUpload = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [ingredients, setIngredients] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectedFile(e.target?.files[0] || null); // Set the selected file\n    setIngredients(null); // Reset ingredients when a new file is selected\n    setError(null); // Reset error when a new file is selected\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    // Prepare the form data\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n\n    try {\n      // Send the image to the backend API\n      const response = await axios.post(\"http://localhost:8000/upload-image/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n\n      // Extract the ingredients from the response\n      const { ingredients } = response.data;\n      setIngredients(ingredients);\n    } catch (error) {\n      setError(\"Failed to fetch ingredients. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"image-upload-container\">\n      <h2>Upload an Image to Get Ingredients</h2>\n      <form onSubmit={handleSubmit} className=\"image-upload-form\">\n        <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Uploading...\" : \"Upload and Analyze\"}\n        </button>\n      </form>\n\n      {/* Display loading status */}\n      {loading && <div className=\"loading\">Processing image...</div>}\n\n      {/* Display error if something went wrong */}\n      {error && <div className=\"error\">{error}</div>}\n\n      {/* Display ingredients when available */}\n      {ingredients && (\n        <div className=\"ingredients-list\">\n          <h3>Ingredients Found:</h3>\n          <ul>\n            {ingredients.split(\"\\n\").map((ingredient, index) => (\n              <li key={index}>{ingredient}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}