import {
  useCopilotContext
} from "./chunk-J2YXDQHR.mjs";

// src/hooks/use-copilot-action.ts
import { useRef, useEffect } from "react";
import { randomId } from "@copilotkit/shared";
function useCopilotAction(action, dependencies) {
  const { setAction, removeAction, actions, chatComponentsCache } = useCopilotContext();
  const idRef = useRef(randomId());
  if (dependencies === void 0) {
    if (actions[idRef.current]) {
      actions[idRef.current].handler = action.handler;
      if (typeof action.render === "function") {
        if (chatComponentsCache.current !== null) {
          chatComponentsCache.current.actions[action.name] = action.render;
        }
      }
    }
  }
  useEffect(() => {
    if (action.disabled) {
      return;
    }
    setAction(idRef.current, action);
    if (chatComponentsCache.current !== null && action.render !== void 0) {
      chatComponentsCache.current.actions[action.name] = action.render;
    }
    return () => {
      removeAction(idRef.current);
    };
  }, [
    setAction,
    removeAction,
    action.description,
    action.name,
    action.disabled,
    // This should be faster than deep equality checking
    // In addition, all major JS engines guarantee the order of object keys
    JSON.stringify(action.parameters),
    // include render only if it's a string
    typeof action.render === "string" ? action.render : void 0,
    // dependencies set by the developer
    ...dependencies || []
  ]);
}

export {
  useCopilotAction
};
//# sourceMappingURL=chunk-A37GANOW.mjs.map